{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/Filter/Filter.module.css","components/Form/Form.module.css","redux/types.js","redux/selectors.js","components/ContactsList/ContactsList.jsx","redux/actions.js","components/Phonebook/formData.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","redux/reducer.js","redux/store.js","App.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","getContacts","store","items","getFilter","filter","ContactsList","contacts","useSelector","dispatch","useDispatch","removeFromContact","id","type","types","payload","AddNewContacts","filterItem","toLowerCase","item","name","includes","onFilter","map","number","className","styles","Item","Text","Btn","onClick","List","FormData","pattern","title","Form","useState","setName","setNumber","nameInputIdRef","useRef","generate","numberInputIdRef","addToContact","isAvailableName","find","contact","isAvailableNumber","alert","action","reset","onSubmit","e","preventDefault","FormContainer","Name","Label","htmlFor","current","Input","required","value","onChange","target","Tel","NameBtn","Filter","Phonebook","container","Title","initialState","combineReducers","newContact","updateContacts","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.560ee7f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__Yb216\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__20k7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Form_Label__3QBfK\",\"Form\":\"Form_Form__2boAo\",\"Input\":\"Form_Input__1kIqz\",\"NameBtn\":\"Form_NameBtn__1jr4a\"};","const ADD_TO_PHONEBOOK = \"phonebook/add\";\nconst REMOVE_FROM_PHONEBOOK = \"phonebook/remove\";\nconst FILTER_PHONEBOOK = \"phonebok/filter\";\n\nexport default {\n  ADD_TO_PHONEBOOK,\n  REMOVE_FROM_PHONEBOOK,\n  FILTER_PHONEBOOK,\n};\n","export const getContacts = (store) => store.items;\n\nexport const getFilter = (store) => store.filter;\n// export const getAllBooks = store => store.books;\n\n// export const getFavoriteBooks = store => {\n//     const favoriteBooks = store.books.filter(({favorite}) =>\n//         favorite);\n//     return favoriteBooks;\n// }\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeFromPhonebook } from \"../../redux/actions\";\nimport { getContacts, getFilter } from \"../../redux/selectors\";\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactsList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onFilter = () => {\n    const filterItem = filter.toLowerCase();\n    const filterContacts = contacts.filter((item) =>\n      item?.name?.toLowerCase().includes(filterItem)\n    );\n    return filterContacts;\n  };\n\n  const removeFromContact = (id) => {\n    dispatch(removeFromPhonebook(id));\n  };\n\n  const AddNewContacts = onFilter().map((item) => {\n    const { name, number } = item;\n    return (\n      <li key={item.id} className={styles.Item}>\n        <p className={styles.Text}>\n          {name} {number}\n        </p>\n        <button\n          className={styles.Btn}\n          type=\"button\"\n          onClick={() => removeFromContact(item.id)}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n  return (\n    <>\n      <ul className={styles.List}>{AddNewContacts}</ul>\n    </>\n  );\n};\n\nexport default ContactsList;\n","import types from \"./types\";\n\nexport const addToPhonebook = (newContact) => {\n  return {\n    type: types.ADD_TO_PHONEBOOK,\n    payload: newContact,\n  };\n};\n\nexport const removeFromPhonebook = (payload) => {\n  return {\n    type: types.REMOVE_FROM_PHONEBOOK,\n    payload,\n  };\n};\n\nexport const filterPhonebook = (payload) => {\n  return {\n    type: types.FILTER_PHONEBOOK,\n    payload,\n  };\n};\n","const FormData = {\n  name: {\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    type: \"tel\",\n    name: \"number\",\n    pattern:\n      \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n    title:\n      \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n  },\n};\n\nexport default FormData;\n","import React, { useRef } from \"react\";\nimport { generate } from \"shortid\";\nimport { useState } from \"react\";\nimport styles from \"./Form.module.css\";\nimport FormData from \"../Phonebook/formData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToPhonebook } from \"../../redux/actions\";\n\nconst Form = () => {\n  const contacts = useSelector((store) => store.items);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputIdRef = useRef(generate());\n  const numberInputIdRef = useRef(generate());\n\n  const addToContact = () => {\n    const isAvailableName = contacts.find((contact) => contact.name === name);\n    const isAvailableNumber = contacts.find(\n      (contact) => contact.number === number\n    );\n    if (isAvailableName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (isAvailableNumber) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n    const action = addToPhonebook({ name, number });\n    dispatch(action);\n  };\n\n  const changeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const changeNumber = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addToContact();\n    // onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <div className={styles.FormContainer}>\n        <div className={styles.Name}>\n          <label className={styles.Label} htmlFor={nameInputIdRef.current}>\n            Name\n            <input\n              {...FormData.name}\n              className={styles.Input}\n              required\n              value={name}\n              onChange={changeName}\n              id={nameInputIdRef.current}\n            />\n          </label>\n        </div>\n        <div className={styles.Tel}>\n          <label className={styles.Label} htmlFor={numberInputIdRef.current}>\n            Number\n            <input\n              {...FormData.number}\n              className={styles.Input}\n              required\n              value={number}\n              onChange={changeNumber}\n              id={numberInputIdRef.current}\n            />\n          </label>\n        </div>\n        <button type=\"submit\" className={styles.NameBtn}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n// class Form extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   nameInputId = generate();\n//   numberInputId = generate();\n\n//   handleChange = (e) => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: \"\",\n//       number: \"\",\n//     });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     const { handleSubmit, handleChange } = this;\n//     return (\n//       <form className={styles.Form} onSubmit={handleSubmit}>\n//         <div className={styles.FormContainer}>\n//           <div className={styles.Name}>\n//             <label className={styles.Label} htmlFor={this.nameInputId}>\n//               Name\n//               <input\n//                 {...FormData.name}\n//                 className={styles.Input}\n//                 required\n//                 value={name}\n//                 onChange={handleChange}\n//                 id={this.nameInputId}\n//               />\n//             </label>\n//           </div>\n//           <div className={styles.Tel}>\n//             <label className={styles.Label} htmlFor={this.numberInputId}>\n//               Number\n//               <input\n//                 {...FormData.number}\n//                 className={styles.Input}\n//                 required\n//                 value={number}\n//                 onChange={handleChange}\n//                 id={this.numberInputId}\n//               />\n//             </label>\n//           </div>\n//           <button type=\"submit\" className={styles.NameBtn}>\n//             Add contact\n//           </button>\n//         </div>\n//       </form>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterPhonebook } from \"../../redux/actions\";\nimport { getFilter } from \"../../redux/selectors\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onChange = ({ target }) => {\n    dispatch(filterPhonebook(target.value));\n  };\n  return (\n    <>\n      <input\n        className={styles.Input}\n        onChange={onChange}\n        value={filter}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styles from \"./Phonebook.module.css\";\nimport ContactsList from \"../ContactsList/ContactsList\";\nimport FormMain from \"../Form/Form\";\nimport Filter from \"../Filter/Filter\";\n\nconst Phonebook = () => {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.Title}>Phonebook</h2>\n      <FormMain />\n      <h2 className={styles.Title}>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import types from \"./types\";\nimport { generate } from \"shortid\";\nimport { combineReducers } from \"redux\";\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: \"\",\n  },\n};\n\nconst itemsReducer = (\n  store = initialState.contacts.items,\n  { type, payload }\n) => {\n  switch (type) {\n    case types.ADD_TO_PHONEBOOK:\n      const newContact = { ...payload, id: generate() };\n      return [...store, newContact];\n\n    case types.REMOVE_FROM_PHONEBOOK:\n      const updateContacts = store.filter((item) => item.id !== payload);\n      return updateContacts;\n\n    default:\n      return store;\n  }\n};\n\nconst filterReducer = (\n  store = initialState.contacts.filter,\n  { type, payload }\n) => {\n  switch (type) {\n    case types.FILTER_PHONEBOOK:\n      return payload;\n\n    default:\n      return store;\n  }\n};\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\n// const FilterLowerCase = filter.toLowerCase();\n//     console.log(filter);\n//     return contacts.filter((item) =>\n//       item?.name?.toLowerCase().includes(FilterLowerCase)\n//     );\n","import { createStore } from \"redux\";\n\nimport reducer from \"./reducer\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import \"./App.css\";\nimport Phonebook from \"./components/Phonebook/Phonebook\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Phonebook />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactsList_Item__3c0bw\",\"List\":\"ContactsList_List__1UAk9\",\"Text\":\"ContactsList_Text__2cDL5\",\"Btn\":\"ContactsList_Btn__GB_5Z\"};"],"sourceRoot":""}